{
  "id": "CD3LyprqNJjHr84x",
  "name": "Backup N8N Workflows to Github",
  "nodes": [
    {
      "parameters": {},
      "id": "80f861ae-e2d4-4243-a8c0-f4be19edaa36",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        960,
        -80
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Subworkflow",
        "height": 752,
        "width": 2111,
        "color": 6
      },
      "id": "8aaa0f89-361b-4897-88d0-a8d53ba74daa",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "26e8dec3-3c06-4de0-8961-bfdf85937b77",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        740,
        860
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "cd1137b9-89d4-4a50-8aaa-878ae12779c7",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        1360,
        20
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "ad99f9e5-3b51-4c29-bc4e-3687290dd4f0",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        2700,
        660
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 1,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "45ce825e-9fa6-430c-8931-9aaf22c42585",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "3ce332ca-3827-4c2d-becd-837da737d285",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "03aba632-80d4-48cb-9dc4-9b78b3a59cce",
      "name": "If file too large",
      "type": "n8n-nodes-base.if",
      "position": [
        1380,
        580
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "65dd6161-7de9-416a-a691-50f10aef918f",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        1380,
        840
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "1acdef8b-8459-45a2-a188-d798e6b32482",
      "name": "Same file - Do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2240,
        660
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "98a82d81-6e25-449a-b905-3ba91983cb81",
      "name": "File is different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2240,
        820
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "6280703b-bdef-4d3f-9ab5-40f35e7937a0",
      "name": "File is new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2240,
        1020
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Config').first().json.repo_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Config').first().json.repo_name }}"
        },
        "filePath": "={{ $('Create sub path').item.json.subPath }}/{{ $('Execute Workflow Trigger').first().json.id }}.json",
        "fileContent": "={{ JSON.stringify($('Config').first().json.data) }}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.githubStatus}})"
      },
      "id": "18bd6371-21c2-413e-abd7-366205df1ef8",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        2460,
        1020
      ],
      "webhookId": "fc6b1cf0-6440-4fb0-94bf-fadabb6ea1fd",
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Config').first().json.repo_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Config').first().json.repo_name }}"
        },
        "filePath": "={{ $('Create sub path').item.json.subPath }}/{{ $('Execute Workflow Trigger').first().json.id }}.json",
        "fileContent": "={{ JSON.stringify($('Config').first().json.data) }}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{ $json.githubStatus }})"
      },
      "id": "2c915c97-075d-4433-9503-fb7ceaa2be51",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        2460,
        820
      ],
      "webhookId": "81fc5f33-06e3-4368-ba2e-0ef46dd8b021",
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "9ffd39a4-4490-413f-8745-339eb39874ef",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1560,
        20
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                6
              ],
              "triggerAtHour": 1
            }
          ]
        }
      },
      "id": "4820accb-df06-42e2-8ca8-76f9f11a5b4b",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        960,
        120
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dae43d3b-56e5-4098-b602-862ebf5cd073",
              "name": "subPath",
              "type": "string",
              "value": "={{ $now.setZone('UTC').toFormat('yyyy') }}/{{ $now.setZone('UTC').toFormat('MM') }}/{{ $now.setZone('UTC').toFormat('dd') }}"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "bda69990-8ac8-412c-b64c-9a0014d30a4d",
      "name": "Create sub path",
      "type": "n8n-nodes-base.set",
      "position": [
        1820,
        840
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "content": "## Main workflow loop",
        "height": 616,
        "width": 2113,
        "color": 7
      },
      "id": "c42cda2f-623b-4e22-ba78-4a7090ff9c55",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        -180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f6d1741-772f-462a-811f-4c334185e4f0",
              "name": "repo_owner",
              "type": "string",
              "value": "=datproto"
            },
            {
              "id": "8cac215c-4fd7-422f-9fd2-6b2d1e5e0383",
              "name": "repo_name",
              "type": "string",
              "value": "=datproto-backup-n8n"
            },
            {
              "id": "2b38f96a-a970-4d13-900e-f15e4cd65c51",
              "name": "data",
              "type": "object",
              "value": "={{\n  {\n    \"nodes\": $('Execute Workflow Trigger').item.json.nodes,\n    \"connections\": $('Execute Workflow Trigger').item.json.connections,\n    \"pinData\": $('Execute Workflow Trigger').item.json.pinData,\n    \"meta\": $('Execute Workflow Trigger').item.json.meta\n  }\n}}"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "3e752f43-2774-41cc-841b-95b6330457fb",
      "name": "Config",
      "type": "n8n-nodes-base.set",
      "position": [
        1000,
        860
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "resource": "message",
        "guildId": {
          "__rl": true,
          "mode": "list",
          "value": "1344944764851851344",
          "cachedResultUrl": "https://discord.com/channels/1344944764851851344",
          "cachedResultName": "Dat Proto's server"
        },
        "channelId": {
          "__rl": true,
          "mode": "list",
          "value": "1344944973958873212",
          "cachedResultUrl": "https://discord.com/channels/1344944764851851344/1344944973958873212",
          "cachedResultName": "n8n"
        },
        "content": "=The Git backup here. Below is my latest activity:\n```\n\ud83d\udc49 Starting Workflow Backup [{{ $execution.id }}]\n```",
        "options": {}
      },
      "id": "b5e91423-2318-4370-ab8f-13ae2c28d9a2",
      "name": "Starting Message",
      "type": "n8n-nodes-base.discord",
      "position": [
        1160,
        20
      ],
      "webhookId": "53d9dd11-ca31-4eea-8dc8-bac95c8bcc04",
      "typeVersion": 2
    },
    {
      "parameters": {
        "resource": "message",
        "guildId": {
          "__rl": true,
          "mode": "list",
          "value": "1344944764851851344",
          "cachedResultUrl": "https://discord.com/channels/1344944764851851344",
          "cachedResultName": "Dat Proto's server"
        },
        "channelId": {
          "__rl": true,
          "mode": "list",
          "value": "1344944973958873212",
          "cachedResultUrl": "https://discord.com/channels/1344944764851851344/1344944973958873212",
          "cachedResultName": "n8n"
        },
        "content": "=The Git backup here. Below is my latest activity:\n```\n\u2705 Backup has completed - {{ $('n8n').all().length }} workflows have been processed.\n```",
        "options": {}
      },
      "id": "c55414bc-d9e3-45ea-83db-10cb8b3b2fb8",
      "name": "Completed Notification",
      "type": "n8n-nodes-base.discord",
      "position": [
        2200,
        -120
      ],
      "webhookId": "53d9dd11-ca31-4eea-8dc8-bac95c8bcc04",
      "executeOnce": true,
      "typeVersion": 2
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo_name }}"
        },
        "filePath": "={{ $now.setZone('UTC').toFormat('yyyy') }}/{{ $now.setZone('UTC').toFormat('MM') }}/{{ $now.setZone('UTC').toFormat('dd') }}/{{ $('Execute Workflow Trigger').item.json.id }}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "758cc5c2-0dfe-45fa-86c3-2135dfdf4d32",
      "name": "Get file data",
      "type": "n8n-nodes-base.github",
      "position": [
        1180,
        580
      ],
      "webhookId": "883c4829-4a9d-4320-ab49-226a5bc15863",
      "typeVersion": 1,
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $workflow.id }}"
        },
        "workflowInputs": {
          "value": {},
          "schema": [],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "id": "6f6dc372-53b2-442f-9729-1c746c659015",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        1980,
        120
      ],
      "typeVersion": 1.2,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {},
      "id": "c1def963-38df-470e-a8b2-0e2781ffe974",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "position": [
        2200,
        220
      ],
      "webhookId": "577d599b-e2eb-4e7c-92aa-b9ca787cc40a",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Config').item.json.repo_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Config').item.json.repo_name }}"
        },
        "filePath": "={{ $now.setZone('UTC').toFormat('yyyy') }}/{{ $now.setZone('UTC').toFormat('MM') }}/{{ $now.setZone('UTC').toFormat('dd') }}/{{ $('Execute Workflow Trigger').item.json.id }}.json",
        "additionalParameters": {}
      },
      "id": "1d4d023f-9623-4672-af80-73b619b4e80e",
      "name": "Get file",
      "type": "n8n-nodes-base.github",
      "position": [
        1600,
        560
      ],
      "webhookId": "81fc5f33-06e3-4368-ba2e-0ef46dd8b021",
      "typeVersion": 1
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "fce24a52-1401-4d3a-a0ae-91f6b74f0763",
      "name": "Wait1",
      "type": "n8n-nodes-base.wait",
      "position": [
        1980,
        -120
      ],
      "webhookId": "4a7448b4-930e-4110-b205-95c55cac5bba",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "jsCode": "const _ = require(\"underscore\")\n\nlet fileInput = null\n\nif (Object.keys($input.first().json).includes(\"content\")) {\n  fileInput = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString())\n}\n\nconst n8nInput = $input.last().json.data\n\nif (!fileInput) {\n  return {\n    \"githubStatus\": \"new\"\n  }\n}\n\nif (_.isMatch(fileInput, n8nInput)) {\n  return {\n    \"githubStatus\": \"same\"\n  }\n} else {\n  return {\n    \"githubStatus\": \"different\"\n  }\n}"
      },
      "id": "1372aa3a-6161-49b7-9f4b-fe0813640548",
      "name": "verifyTheDifference",
      "type": "n8n-nodes-base.code",
      "position": [
        1600,
        840
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "1e6de6b4-3074-41bc-8a9d-465c0eb9a773",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $('verifyTheDifference').first().json.githubStatus }}",
                    "rightValue": "same"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "same"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "cf6e130e-c85d-4a24-b11a-abfd0ecfcb19",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $('verifyTheDifference').first().json.githubStatus }}",
                    "rightValue": "different"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "different"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "f2fc6dda-85f5-4b81-b016-3e033b1dbcab",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $('verifyTheDifference').first().json.githubStatus }}",
                    "rightValue": "new"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "=new"
            }
          ]
        },
        "options": {}
      },
      "id": "849b728e-0a94-4809-ab53-236b0265bdbb",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "position": [
        2020,
        840
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "1b38883e-c738-4a09-8bb8-b2de6ef8ce07",
      "name": "Wait2",
      "type": "n8n-nodes-base.wait",
      "position": [
        2200,
        40
      ],
      "webhookId": "4a7448b4-930e-4110-b205-95c55cac5bba",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "content": "# Workflows backup to Github\n======================================================================\n\n## Introduction\nThis workflow will backup all of your existed workflows to a single Github repository.\n\nThe Backup folders' name are based on the current backup date and have default format: \"yyyy/MM/dd\" (setup at \"Create sub path\" node).\n\nThroughout the backup process, the N8N will inform user via discord with clear message about Start, Success and Failure backups.\n\n## Tech Stack\nThe following nodes / services / libraries are used in this workflow:\n\n### Nodes:\n1. **Discord:** To send message to configured setup channel.\n2. **N8N:** To get all workflows' information.\n3. **Github:** To store backup data.\n4. **Code:** To run data comparison (Existed vs Latest workflow data).\n5. **Wait:** To avoid discord message rate limit.\n\n### External libraries:\n1. **Underscore.js:** JavaScript library that provides lots of common Javascript functions, to help user save time when using code node.\n\n## Guideline\n1. Open \"Config\" node and setup the following information:\n    - **repo_owner:** Your Github username.\n    - **repo_name:** The repository that you want to store workflows backup data.\n2. Open \"Create sub path\" node and change the naming and path format of backup folder(s).\n3. Setup custom messages in 3 discord nodes:\n    - **Starting Message:** N8N inform user at the time workflow start.\n    - **Inform Success Flows:** After each success backup, N8N will notify user.\n    - **Inform Failed Flows:** After each failure backup, N8N will notify user to have appropriate action.\n    - **Completed Notifications:** Then at the final, the workflow will give user a summary.",
        "height": 1400,
        "width": 680,
        "color": 4
      },
      "id": "6a944a06-9d91-4a30-ad77-8ded210a283c",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        20,
        -180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "message",
        "guildId": {
          "__rl": true,
          "mode": "list",
          "value": "1344944764851851344",
          "cachedResultUrl": "https://discord.com/channels/1344944764851851344",
          "cachedResultName": "Dat Proto's server"
        },
        "channelId": {
          "__rl": true,
          "mode": "list",
          "value": "1344944973958873212",
          "cachedResultUrl": "https://discord.com/channels/1344944764851851344/1344944973958873212",
          "cachedResultName": "n8n"
        },
        "content": "=The Git backup here. Below is my latest activity:\n```\n\u2705 Success to backup {{ $('Loop Over Items').item.json.id }}\n```",
        "options": {}
      },
      "id": "77d743b9-8b41-4a61-bee5-dd0ef7d2a0ec",
      "name": "Inform Success Flows",
      "type": "n8n-nodes-base.discord",
      "position": [
        2400,
        40
      ],
      "webhookId": "53d9dd11-ca31-4eea-8dc8-bac95c8bcc04",
      "typeVersion": 2,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "message",
        "guildId": {
          "__rl": true,
          "mode": "list",
          "value": "1344944764851851344",
          "cachedResultUrl": "https://discord.com/channels/1344944764851851344",
          "cachedResultName": "Dat Proto's server"
        },
        "channelId": {
          "__rl": true,
          "mode": "list",
          "value": "1344944973958873212",
          "cachedResultUrl": "https://discord.com/channels/1344944764851851344/1344944973958873212",
          "cachedResultName": "n8n"
        },
        "content": "=The Git backup here. Below is my latest activity:\n```\n\ud83d\udc49 Failed to backup {{ $('Loop Over Items').item.json.id }}\n```",
        "options": {}
      },
      "id": "0a77cc2f-f0bb-4768-b9e7-7bc511b96810",
      "name": "Inform Failed Flows",
      "type": "n8n-nodes-base.discord",
      "position": [
        2400,
        220
      ],
      "webhookId": "53d9dd11-ca31-4eea-8dc8-bac95c8bcc04",
      "typeVersion": 2
    }
  ],
  "connections": {
    "n8n": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Inform Failed Flows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Completed Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Inform Success Flows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Config": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          },
          {
            "node": "Get file data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Same file - Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is new": {
      "main": [
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "verifyTheDifference",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file data": {
      "main": [
        [
          {
            "node": "If file too large",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create sub path": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Starting Message": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is different": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If file too large": {
      "main": [
        [
          {
            "node": "Get file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inform Failed Flows": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "verifyTheDifference": {
      "main": [
        [
          {
            "node": "Create sub path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inform Success Flows": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Same file - Do nothing": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "pinData": {}
}